#!groovy

pipeline {
	agent any
    options {
        timestamps()
        timeout(time: 2, unit: 'HOURS')
        }

    environment {
        JAVA_TOOL_OPTIONS = "-Duser.home=/var/maven"
        DC_IMAGE_NAME       = "java-app"
        //ARTVERSION       = "${env.BUILD_ID}"
        ARTVERSION          = "v1"
        DOCKER_IMAGE_REPO   = "repo.local"
        CHART_NAME          = "hamid-node"
      }


    stages{

        // stage('Checkout Code') {
        // steps {
        //     git(url: 'https://github.com/hamidrgholipour/java-temp.git', branch: 'master')
        //    }
        // }  
        // stage('Test') {
        // agent {
        //         docker {
        //             image "maven:3.8.6-jdk-8"
        //             args "-v /tmp/maven:/var/maven/.m2 -e MAVEN_CONFIG=/var/maven/.m2 -u 0" }
        //         }        
        // steps {
        //     //milestone(ordinal: null, label: "Milestone: Test")
        //     sh """
        //     ls
        //     cd code
        //     mvn test
        //     """ 
        //     }
        // }
        stage('Build Artifact') {
        agent {
                docker {
                    image "maven:3.8.6-jdk-8"
                    args "-v /root/maven-repo:/var/maven/.m2 -e MAVEN_CONFIG=/var/maven/.m2 -u 0" }
                }        
        steps {
            sh 'ls'
            sh 'cd ./code'
            sh 'pwd && ls'
            sh 'mvn -version'
            sh 'mvn clean install'
        }
    }
    
    // stage('temp') {
    //     agent { docker{ image 'maven:3.8.6-jdk-8' 
    //     args "-v /tmp/maven:/var/maven/.m2 -e MAVEN_CONFIG=/var/maven/.m2 -u 0" } }
    //     steps {
    //         sh 'pwd'
    //         sh 'cd code'
    //         sh 'mvn clean install'
    //     }
    // }

    // stage('trivy') {
    //     agent { 
    //     docker { image 'aquasec/trivy:latest' }
    //   }
    //   steps {
    //     sh 'version'
    //   }
    // }   
        stage('Build docker'){
            agent{
            docker {
                    image "docker:dind"
                    args "-v /root/maven-repo:/maven-repo -v /var/run/docker.sock:/var/run/docker.sock -u 0" }
            }    
        
        steps{
            sh '''
                cd ./jenkins/app/
                cp /maven-repo/repository/com/visualpathit/vprofile/v2/vprofile*.war app.war
                docker build -t ${DOCKER_IMAGE_REPO}/java-app:v4 .
            '''
        }
        }
        // stage('push docker'){
        //     agent{
        //     docker {
        //             image "docker:dind"
        //             args "-v /root/maven-repo:/maven-repo -v /var/run/docker.sock:/var/run/docker.sock -u 0" }
        //     }    
        // steps{
        //     sh '''
        //         docker push ${DOCKER_IMAGE_REPO}/java-app:v4
        //     '''
        // }
        // }

 
    }


}
